{
    "cli_prompts":[
        {
            "program":"gcloud",
            "description":"deploy app to google cloud",
            "example":"gcloud app deploy --version v1 <one instance>",
            "prompt":"gcloud app deploy",
            "parameters":[],
            "flags":[
                {
                    "flag": "--version",
                    "description": "gcloud: app deploy specific version",
                    "example":"gcloud app deploy --version <app_version>"
                }
            ]
        },
        {
            "program":"gcloud",
            "description":"google cloud app services",
            "example":"gcloud app services list",
            "prompt":"gcloud app services",
            "parameters":[
                {
                    "parameter": "list",
                    "description": "gcloud: list app services",
                    "example":"gcloud app services list"
                },
                {
                    "parameter": "delete",
                    "description": "gcloud: delete app service",
                    "example":"gcloud app services delete"
                }
            ],
            "flags":[]
        },       
        {
            "program":"gcloud",
            "description":"google cloud app engine versions instances",
            "example":"gcloud app versions list",
            "prompt":"gcloud app versions",
            "parameters":[
                {
                    "parameter": "list",
                    "description": "gcloud: list app versions",
                    "example":"gcloud app versions list"
                },
                {
                    "parameter": "delete",
                    "description": "gcloud: delete app version",
                    "example":"gcloud app versions delete"
                }
            ],
            "flags":[]
        },
        {
            "program":"python",
            "description":"run python script",
            "example":"python -m notebook",
            "prompt":"python",
            "parameters":[
                {
                    "parameter": "notebook",
                    "description": "python: open jupyter notebook",
                    "example":"python -m notebook"
                }
            ],
            "flags":[
                {
                    "flag": "-m",
                    "description": "python: module-name",
                    "example":"python -m notebook"
                }
            ]
        },
        {
            "program":"mingw",
            "description":"c/c++ compiler",
            "example":"g++ <cpp_file>",
            "prompt":"g++",
            "parameters":[],
            "flags":[
                {
                    "flag": "-I",
                    "description": "mingw: include src files",
                    "example":"g++ <cpp_file> -L<header_file> -I<src_files_directory -o<output_executable>"
                },
                {
                    "flag": "-L",
                    "description": "mingw: include libraries",
                    "example":"g++ <cpp_file> -L<header_file> -I<src_files_directory -o<output_executable>"
                },
                {
                    "flag": "-o",
                    "description": "mingw: output to executable file",
                    "example":"g++ <cpp_file> -L<header_file> -I<src_files_directory -o<output_executable>"
                }
            ]
        },
        {
            "program":"mingw-make",
            "description":"mingw-make: read compile make file for mingw compiler",
            "example":"mingw-make <cpp_file>",
            "prompt":"mingw-make",
            "parameters":[],
            "flags":[
                {
                    "flag": "--version",
                    "description": "mingw-make: list version details",
                    "example":"g++ <cpp_file> -L<header_file> -I<src_files_directory -o<output_executable>"
                }
            ]
        },
        {
            "program":"pip",
            "description":"python module manager",
            "example":"",
            "prompt":"pip",
            "parameters":[
                {
                    "parameter": "install",
                    "description": "python: install python package module",
                    "example":"pip install <package>"
                },
                {
                    "parameter": "uninstall",
                    "description": "python: uninstall python package module",
                    "example":"pip uninstall <package>"
                }
            ],
            "flags":[]
        },
        {
            "program":"git",
            "description":"project source file repository",
            "example":"",
            "prompt":"git",
            "parameters":[
                {
                    "parameter": "init",
                    "description": "git: initiate reposistory in local directory",
                    "example":"git init"

                },
                {
                    "parameter": "checkout",
                    "description": "git: change branch",
                    "example":"git checkout <branch>"
                },
                {
                    "parameter": "branch",
                    "description": "git: list local branches",
                    "example":"git branch"
                },
                {
                    "parameter": "stash",
                    "description": "git: stash work in progress git",
                    "example":"git stash"
                },
                {
                    "parameter": "merge",
                    "description": "git: merge selected branch to current branch",
                    "example":"git merge <git_branch>"
                },
                {
                    "parameter": "add",
                    "description": "git: add selected files to pre commit",
                    "example":"git add ."
                },
                {
                    "parameter": "commit",
                    "description": "git: commit to branch from files added to pre commit",
                    "example":"git commit -m"

                },
                {
                    "parameter": "push",
                    "description": "git: upload to remote repository",
                    "example":"git push <url_repository>"
                },
                {
                    "parameter": "log",
                    "description": "git: output commit logs",
                    "example":"git log --graph --oneline"
                }
            ],
            "flags":[
                {
                    "flag": "-m",
                    "description": "git commit: add message",
                    "example":"git commit -m"
                },
                {
                    "flag": "--graph",
                    "description": "git: output commits with graphic diagrams",
                    "example":"git log --graph"
                },
                {
                    "flag": "--oneline",
                    "description": "git: output commits in one line",
                    "example":"git log --oneline"
                }
            ]
        },
        {
            "program":"windows",
            "description":"network: ip setting",
            "example":"",
            "prompt":"ipconfig",
            "parameters":[
                {
                    "parameter": "/all",
                    "description": "network: display full tcp/ip configuration for all adapters",
                    "example":"ipconfig /all"
                },
                {
                    "parameter": "/renew Local Area Connection",
                    "description": "network: renew a dhcp-assigned ip address configuration for only the lan adapter",
                    "example":"ipconfig /renew loca area connection"
                },
                {
                    "parameter": "/flushdns",
                    "description": "network: clear dns cache",
                    "example":"ipconfig /flushdns"
                }
            ],
            "flags":[]
        },
        {
            "program":"windows",
            "description":"network: ping targeted ip address",
            "example":"",
            "prompt":"ping",
            "parameters":[],
            "flags":[]
        },
        {
            "program":"windows",
            "description":"network: trace network route to targeted ip address",
            "example":"",
            "prompt":"tracert",
            "parameters":[],
            "flags":[]
        },
        {
            "program":"windows",
            "description":"network: flush routing table",
            "example":"",
            "prompt":"netsh interface ip delete destinationcache",
            "parameters":[],
            "flags":[]
        },
        {
            "program":"windows",
            "description":"directories: change directory",
            "example":"",
            "prompt":"cd",
            "parameters":[],
            "flags":[]
        },
        {
            "program":"windows",
            "description":"directories: list items in directory",
            "example":"",
            "prompt":"dir",
            "parameters":[],
            "flags":[]
        },
        {
            "program":"windows",
            "description":"directories: create directory",
            "example":"",
            "prompt":"mkdir",
            "parameters":[],
            "flags":[]
        },
        {
            "program":"windows",
            "description":"directories: delete directory",
            "example":"",
            "prompt":"rmdir",
            "parameters":[],
            "flags":[]
        },
        {
            "program":"windows",
            "description":"files: create file",
            "example":"echo <file data> > <file_name>",
            "prompt":"echo .>",
            "parameters":[],
            "flags":[]
        },
        {
            "program":"windows",
            "description":"files: delete file",
            "example":"",
            "prompt":"del",
            "parameters":[],
            "flags":[]
        },
        {
            "program":"linux",
            "description":"terminal: exit",
            "example":"",
            "prompt":"exit",
            "parameters":[],
            "flags":[]
        },

        {
            "program":"linux",
            "description":"admin: elevate to administrator",
            "example":"",
            "prompt":"sudo",
            "parameters":[],
            "flags":[]
        },
        {
            "program":"linux",
            "description":"linux packages manager",
            "example":"sudo apt-get",
            "prompt":"apt-get",
            "parameters":[
                {
                    "parameter":"install",
                    "description":"install linux package",
                    "example":"sudo apt-get install <package>"
                },
                {
                    "parameter":"uninstall",
                    "description":"uninstall linux package",
                    "example":"sudo apt-get uninstall <package>"
                }
            ],
            "flags":[]
        },
        {
            "program":"linux",
            "description":"network: ip setting",
            "example":"",
            "prompt":"ifconfig",
            "parameters":[],
            "flags":[]
        },
        {
            "program":"linux",
            "description":"network: ping targeted ip address",
            "example":"",
            "prompt":"ping",
            "parameters":[],
            "flags":[]
        },
        {
            "program":"linux",
            "description":"network: trace network route to targeted ip address",
            "example":"",
            "prompt":"traceroute",
            "parameters":[],
            "flags":[]
        },
        {
            "program":"linux",
            "description":"directories: change directory",
            "example":"",
            "prompt":"cd",
            "parameters":[],
            "flags":[]
        },
        {
            "program":"linux",
            "description":"directories: list items in directory",
            "example":"",
            "prompt":"ls",
            "parameters":[],
            "flags":[]
        },
        {
            "program":"linux",
            "description":"directories: create directory",
            "example":"",
            "prompt":"mkdir",
            "parameters":[],
            "flags":[]
        },
        {
            "program":"linux",
            "description":"directories: delete directory",
            "example":"",
            "prompt":"rmdir",
            "parameters":[],
            "flags":[]
        },
        {
            "program":"linux",
            "description":"files: create file",
            "example":"echo <file_data> > <file_name>",
            "prompt":"echo .>",
            "parameters":[],
            "flags":[]
        },
        {
            "program":"linux",
            "description":"files: delete file",
            "example":"",
            "prompt":"rm",
            "parameters":[],
            "flags":[]
        },
        {
            "program":"node package manager",
            "description":"package manager for nodejs",
            "example":"npm install -g react",
            "prompt":"npm",
            "parameters":[
                {
                    "parameter":"init",
                    "description":"npm: initates package.json in local directory",
                    "example":"npm init"
                },
                {
                    "parameter":"install",
                    "description":"npm: install node package",
                    "example":"npm install"
                },
                {
                    "parameter":"start",
                    "description":"npm: start node app",
                    "example":"npm start <server_name>"
                },
                {
                    "parameter":"run",
                    "description":"npm: run node app",
                    "example":"npm run start"
                }

            ],
            "flags":[
                {
                    "flag":"-g",
                    "description":"npm: node package global decleration",
                    "example":"npm install -g <package>"
                }
            ]
        },
        {
            "program":"node package execute",
            "description":"nodejs: excute nodejs apps",
            "example":"",
            "prompt":"npx",
            "parameters":[
                {
                    "parameter":"json-server",
                    "description":"npm: start json server",
                    "example":"npx json-server --watch <json_file> --port <port_number>"
                },
                {
                    "parameter":"create-react-app",
                    "description":"npm: create react app",
                    "example":"npx create-react-app <app_name>"
                }
            ],
            "flags":[
                {
                    "flag": "--watch",
                    "description": "watch json-server file",
                    "example":"npx json-server --watch <json_file> --port <port_number>"
                },
                {
                    "flag": "--port",
                    "description": "assign json-server port",
                    "example":"npx json-server --watch <json_file> --port <port_number>"
                }
            ]
        },
        {
            "program":"nodemon",
            "description":"nodejs: start nodemon app",
            "example":"nodemon <server_name>",
            "prompt":"nodemon",
            "parameters":[],
            "flags":[]
        },
        {
            "program":"vim",
            "description":"command line text editor",
            "example":"",
            "prompt":"vim",
            "parameters":[],
            "flags":[
                {
                    "flag":"--version",
                    "description":"vim: list vim vesion and vim details",
                    "example":"vim --version"
                },
                {
                    "flag":"--help",
                    "description":"vim: list vim flags",
                    "example":"vim --version"
                },
                {
                    "flag":"-E",
                    "description":"vim: improved ex mode",
                    "example":"vim -E"
                },
                {
                    "flag":"-y",
                    "description":"vim: easy mode (like evim, modeless)",
                    "example":"vim -y"
                },
                {
                    "flag":"-D",
                    "description":"vim: debugging mode",
                    "example":"vim -D"
                }
            ]
        },
        {
            "program":"openssl",
            "description":"Cryptography Hashing",
            "example":"",
            "prompt":"openssl",
            "parameters":[
                {
                    "parameter": "genrsa",
                    "description": "generate genrsa in aes 256 bit",
                    "example":"openssl genrsa -aes256 -out <ca-key-.pem> 4096"
                },
                {
                    "parameter": "req",
                    "description": "generate public ca cert",
                    "example":"openssl req -new -x509 -sha256 -days <days> -key <ca-key.pem> -out <ca.pem>"
                }
            ],
            "flags":[
                {
                    "flag": "-aes256",
                    "description": "generate genrsa in aes 256 bit",
                    "example":"openssl genrsa -aes256 -out <ca-key-.pem> 4096"
                },
                {
                "flag": "-out",
                "description": "output to file",
                "example":"openssl genrsa -aes256 -out <ca-key-.pem> 4096"
                },
                {
                "flag": "-new",
                "description": "unknown",
                "example":""
                },
                {
                "flag": "-x509",
                "description": "unknown",
                "example":""
                },
                {
                "flag": "-sha256",
                "description": "unknown",
                "example":""
                },
                {
                "flag": "-days",
                "description": "set certificate renewal length",
                "example":""
                }
            ]
        }
    ]
}